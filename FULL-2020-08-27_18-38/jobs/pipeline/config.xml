<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.6.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.6.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>pipeline job</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.13">
      <gitLabConnection>IoTMonitoringSolution</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Branch</name>
          <description>Branch Name</description>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.SCMTrigger>
          <spec></spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {
   agent any
    tools {
      // Install the Maven version configured as &quot;M3&quot; and add it to the path.
      nodejs &apos;ATF&apos;
        }
   stages {
      stage(&apos;ATF_build&apos;) {
         steps {
            // Get some code from a GitHub repository
                sh &apos;ls -lrt&apos;
                dir (&apos;Cloud_ATF_Docker&apos;) {
                checkout changelog: false, poll: false, scm: [$class: &apos;GitSCM&apos;, branches: [[name: &apos;*/master&apos;]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: &apos;CheckoutOption&apos;], [$class: &apos;CloneOption&apos;, noTags: false, reference: &apos;&apos;, shallow: true, timeout: 120]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &apos;gitlab_user&apos;, url: &apos;http://10.10.10.2/IoTMonitoringSolution/Cloud_ATF_Docker.git&apos;]]]
                }

                dir (&apos;Cloud_ATF_Docker/ATF_Docker/CATFDas&apos;) {
                        git credentialsId: &apos;gitlab_user&apos;, url: &apos;http://10.10.10.2/Sriveena/Cloud_ATF_DataAnalysisService.git&apos;
                        sh &apos;git checkout origin/$Branch&apos;
                        sh &apos;git branch&apos;
                        sh &apos;npm install&apos;
                }
                dir (&apos;Cloud_ATF_Docker/ATF_Docker/CATFDhs&apos;) {
                        git credentialsId: &apos;gitlab_user&apos;, url: &apos;http://10.10.10.2/abhishek/Cloud_ATF_DataHandlerService.git&apos;
                        sh &apos;git checkout origin/$Branch&apos;
                        sh &apos;git branch&apos;
                        sh &apos;npm install&apos;
                }
                dir (&apos;Cloud_ATF_Docker/ATF_Docker/CATFGateway&apos;) {
                        git credentialsId: &apos;gitlab_user&apos;, url: &apos;http://10.10.10.2/IoTMonitoringSolution/CloudATFGateway.git&apos;
                        sh &apos;git checkout origin/$Branch&apos;
                        sh &apos;git branch&apos;
                        sh &apos;npm install&apos;
                }
                dir (&apos;Cloud_ATF_Docker/ATF_Docker/CATFWAL&apos;) {
                        git credentialsId: &apos;gitlab_user&apos;, url: &apos;http://10.10.10.2/IoTMonitoringSolution/Cloud_ATF_WiCheck_AL_Service.git&apos;
                        sh &apos;git checkout origin/$Branch&apos;
                        sh &apos;git branch&apos;
                        sh &apos;npm install&apos;
                }
                //dir (&apos;Cloud_ATF_Docker/EP_Docker/CATFEP_Service&apos;) {
                       // git credentialsId: &apos;gitlab_user&apos;, url: &apos;http://10.10.10.2/IoTMonitoringSolution/Cloud_ATF_EP_Service.git&apos;
                        //sh &apos;git checkout origin/$Branch&apos;
                        //sh &apos;git branch&apos;
                       // sh &apos;npm install --production&apos;
                //}
            sh &apos;ls -lrt&apos;
            sh &apos;pwd&apos;
         }

      }
        stage(&apos;EP_build&apos;) {
            steps {
                nodejs(&apos;EP&apos;) {
                sh &apos;node -v&apos;
                }
            }
        }
   }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>